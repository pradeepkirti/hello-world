  [Date] between _add_months(current_date, -24) and current_date   -----Before 24 month filter


1-Reporting Month Year

=FormatDate(ToDate([Month Year TN];"Mmm yyyy");"Mmm yyyy") Where ([Month End Date TN] >[Udf_L2L12M End Month End Date])


CASE WHEN 
  [Month End Date TN] > [Udf_L2L12M End Month End Date]  -- Filter condition
THEN
  ToDate(STRTOMONYYYY('[Month Year TN]', '%b %Y'), 'YYYY-MM-DD')  -- Convert to date and format
ELSE
  NULL  -- No formatting if filter fails
END



2- Udf_L12M End Month End Date

=LastDayOfMonth(ToDate(UserResponse("Select Reporting Month Begin Date");""))


3-Udf_L12M Start Month End Date


-----------------------------------------------------------


(Date ) BETWEEN
CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', date_trunc('month', current_date)-1) ELSE date_trunc('month', date_trunc('month', @Prompt(dtRunDate))-1)  END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date)-1 ELSE date_trunc('month', @Prompt(dtRunDate))-1 END  )


BLR_RPT.LGCY_RPT_ID  =  @Prompt('Enter a Report ID','N',,Mono,Free,Not_Persistent,,User:-1)


( @Prompt(strClientID) = '-1'
OR
( rtrim(ADMIN.VW_BILLER_ORG.LGCY_BLR_ID) ) = @Prompt(strClientID)  )



SELECT DISTINCT
    A.SRC_ID,
    DATE(A.CHK_CRTE_DT) AS CHK_CRTE_DT,
    A.CHK_NBR,
    A.CHK_AMT,
    F.SBSPN_PYEE_FULL_NM,
    (CASE WHEN LENGTH(F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) = 0 THEN '' ELSE ('*' || F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) END) AS SBSPN_PYEE_ACCT_NBR_LAST4_TXT,
    (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END) AS LGCY_REM_CTR_NBR,
    A.CSMR_ID,
    RTRIM(H.FIRST_NM) || ' ' || RTRIM(H.LAST_NM) AS CONSUMER_NAM,
    I.SBSPN_STAT_NM,
    (CASE 
         WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE) - 2
         ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 2
     END) - DATE(A.CHK_CRTE_DT) AS CALENDAR_DAYS_OLD,
    SUM(J.CKFR_BSNS_DAY_IND) AS BUSINESS_DAYS_OLD,
    T1.SPSR_NM,
    'Fiserv' AS SOURCE,
    'CONFIDENTIAL' AS DATA_SENSITIVITY,
    'Custom SQL' AS QUERY_TYPE
FROM (
    SELECT
        B.LGCY_SPSR_ID,
        B.SPSR_ORG_INDV_ID,
        C.BSNS_NM AS SPSR_NM
    FROM PM_DEV_DWS.DW.VW_ORG_RPT A
    JOIN PM_DEV_DWS.DW.VW_SPSR B ON B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID
    JOIN PM_DEV_DWS.DW.VW_ORG C ON C.ORG_INDV_ID = B.SPSR_ORG_INDV_ID
    JOIN PM_DEV_DWS.DW.VW_RPT D ON D.RPT_ID = A.RPT_ID
    WHERE D.LGCY_RPT_ID = ?Enter_a_Report_ID?
      AND (?strClientID? = '-1' OR B.LGCY_SPSR_ID = ?strClientID?)
      AND B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID
) AS T1
JOIN PM_DEV_DWS.DW.VW_CORP_CHK_RCNCL AS A ON T1.LGCY_SPSR_ID = A.SRC_ID
JOIN PM_DEV_DWS.DW.VW_CR_TRN_REMIT AS B ON A.SRC_ID = B.SRC_ID
                                         AND A.CSMR_ID = B.CSMR_ID
                                         AND A.REMIT_CTR_PYMT_TRK_ID = B.REMIT_CTR_PYMT_TRK_ID
                                         AND A.PAY_HIST_ADD_TMS = B.PAY_HIST_ADD_TMS
JOIN PM_DEV_DWS.DW.VW_MEDIA_TYPE AS C ON B.MEDIA_TYPE_ID = C.MEDIA_TYPE_ID
JOIN PM_DEV_DWS.DW.VW_REM_CTR AS D ON A.REMIT_CTR_ORG_ID = D.RC_ORG_INDV_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN AS G ON A.CSMR_ID = G.LGCY_SBSR_ID
                                 AND A.SRC_ID = G.LGCY_SPSR_ID
                                 AND T1.LGCY_SPSR_ID = G.LGCY_SPSR_ID
                                 AND T1.SPSR_ORG_INDV_ID = G.ORG_INDV_ID
JOIN PM_DEV_DWS.DW.VW_PYMT AS E ON A.LGCY_SRVR_TRN_TMS = E.LGCY_TMS
                               AND G.SBSPN_ID = E.SBSPN_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN_PYEE AS F ON E.SBSPN_PYEE_ID = F.SBSPN_PYEE_ID
JOIN PM_DEV_DWS.DW.VW_PERS AS H ON G.SBSR_PERS_INDV_ID = H.PERS_INDV_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN_STAT AS I ON G.SBSPN_STAT_ID = I.SBSPN_STAT_ID
JOIN PM_DEV_DWS.DW.VW_DATE_DIM AS J ON J.DATE_DIM_ID >= A.CHK_CRTE_DT
                                     AND J.DATE_DIM_ID < (
                                         CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)
                                              ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?))
                                         END
                                     )
WHERE 1=1
  AND (A.SRC_ID = '' OR A.SRC_ID = T1.LGCY_SPSR_ID)
  AND A.SRC_ID <> ''
  AND A.CHK_STAT_IND = 'N'
  AND A.CHK_CRTE_DT <= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)) - 20
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 20
      END
  )
  AND A.CHK_CRTE_DT >= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)) - 90
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 90
      END
  )
  AND (A.CHK_RCNCL_DT IS NULL OR A.CHK_RCNCL_DT >= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE))
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?))
      END
  ))
  AND B.MEDIA_TYPE_ID = 3
GROUP BY
    A.SRC_ID,
    DATE(A.CHK_CRTE_DT),
    A.CHK_NBR,
    A.CHK_AMT,
    F.SBSPN_PYEE_FULL_NM,
    (CASE WHEN LENGTH(F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) = 0 THEN '' ELSE ('*' || F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) END),
    (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END),
    A.CSMR_ID,
    RTRIM(H.FIRST_NM) || ' ' || RTRIM(H.LAST_NM),
    I.SBSPN_STAT_NM,
    (CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE) - 2
          ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 2
     END) - DATE(A.CHK_CRTE_DT),
    T1.SPSR_NM




IF ([IncidentDaysBetween] = 0) THEN
    (  (?pStart_date?) )
ELSE 
    ( to_char(?pStart_date?,'M/d/yyyy') + '-' +to_char(?pEnd_date?,'M/d/yyyy') )



154060





RSV-VAL-0010 Failed to load the report specification. XQE-PLN-0229 This query is not supported, because it only contains dimension items and there is no single fact stream that covers all of the entities. The involved fact tables are: SPSR_ORG_RPT( VW_ORG_RPT), VW_CQ_MTHLY_PRCSD_PYMT_SLA_PA, VW_CQ_MTHLY_SPSR_INCDNT_PYMT, VW_DLY_CORP_CHK_ACTY_FACT, VW_DLY_PRCSD_CARD_FNDG_PYMT_FACT, VW_DLY_PRCSD_PYMT_FACT, VW_DLY_SPSR_CARD_FUND_FREQ_PYMT_FACT, VW_MTHLY_PYMT_REAL_TM_SMRY, VW_PYMT, VW_SBSPNLESS_PYMT, VW_TENANT_SRVC_UI_CONFIG. Resolve this issue by adding one or more fact items to the query. 


	@Prompt(strClientID) = '-1' OR @Select(Sponsor\Sponsor
ID) = @Prompt(strClientID)

=LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-11;MonthPeriod))


4-Udf_L2L12M End Month End Date

=LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-12;MonthPeriod))

5-Udf_L2L12M Start Month End Date

=LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-23;MonthPeriod))

6-Udf_Last 12 Months End Date

=LastDayOfMonth(ToDate(UserResponse("Select Reporting Month Begin Date");""))

7-Udf_Last 12 Months Start Date

=RelativeDate(LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-12;MonthPeriod));1;DayPeriod)

8-Udf_Last to Last Year End Date

=LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-12;MonthPeriod))

9-Udf_Last to Last Year Start Date

=RelativeDate(LastDayOfMonth(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-24;MonthPeriod));1;DayPeriod)

10-Udf_LC This Month Rank

=([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month])

11- Udf_Month

=FormatDate([Date TN];"Mmm-yy")

12-Udf_Previous Month

=FormatDate(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-1;MonthPeriod);"Mmm-yy")

13-Udf_RunDate

=FormatDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");"Mmm yyyy")

14-Udf_This Month

=FormatDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");"Mmm-yy")

15-Udf_This Month Last to Last Year

=FormatDate(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-24;MonthPeriod);"Mmm-yy")

16-Udf_This Month Last Year

=FormatDate(RelativeDate(ToDate(UserResponse("Select Reporting Month Begin Date");"");-12;MonthPeriod);"Mmm-yy")

17-Udf_Transfer Speed Percent

="% "+[Transfer Speed]

18-Udf_reporting Month Year Detail

All FIs

=[Distinct TN].[TN Transacted FI Count] + [Distinct TN - BOFA].[TN Transacted FI Count - BOFA]

19-Large FIs

=[Large FIs Other] + [Large FIs BOFA]

20-Large FIs BOFA

=([Distinct TN - BOFA].[TN Transacted FI Count - BOFA] Where ([Distinct TN - BOFA].[Home ID] = 88871070))

21-Large FIs Other

=[Distinct TN].[TN Transacted FI Count]
Where (( [Distinct TN].[Home ID] InList (88871070; 88850042; 88850003; 88871081; 88850009; 88871020; 88850031; 88850059; 88850065; 88851001)) Or ([Distinct TN].[Partner] = "Digital Insight"))

22-Other FIs

=([Distinct TN].[TN Transacted FI Count] + [Distinct TN - BOFA].[TN Transacted FI Count - BOFA])- [Large FIs]

Udf_Avg_In_Transfer_L12M

=If(IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])))) = 1) Then 0 Else
(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))
/(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))

Udf_Avg_In_Transfer_L2L12M

=If(IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date])))) = 1) Then 0 Else
(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))
/(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])
 Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))
 
 Udf_Avg_Out_Transfer_L12M
 
 =If(IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])))) = 1) Then 0 Else
(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))
/(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))


Udf_Avg_Out_Transfer_L2L12M

=If(IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date])))) = 1) Then 0 Else
(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))
/(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))

Udf_Avg Transfer/User L12M

=If(IsNull(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where([Month End Date TN] Between([Udf_L12M Start Month End Date];[Udf_L12M End Month End Date]))) = 1) Then 0 Else 
((([Distinct TN].[TN Transfer Count] + [Distinct TN - BOFA].[TN Transfer Count - BOFA]) Where([Month End Date TN] Between([Udf_L12M Start Month End Date];[Udf_L12M End Month End Date])))
/(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where([Month End Date TN] Between([Udf_L12M Start Month End Date];[Udf_L12M End Month End Date]))))

Udf_Avg Transfer/User L2L12M

=If(IsNull(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where([Month End Date TN] Between([Udf_L2L12M Start Month End Date];[Udf_L2L12M End Month End Date]))) = 1) Then 0 Else 
((([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where([Month End Date TN] Between([Udf_L2L12M Start Month End Date];[Udf_L2L12M End Month End Date])))
/(([Distinct TN].[TN Transfer Count] + [Distinct TN - BOFA].[TN Transfer Count - BOFA]) Where([Month End Date TN] Between([Udf_L2L12M Start Month End Date];[Udf_L2L12M End Month End Date]))))

Udf_Avg Transfer/User TM

=If (IsNull(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month])) = 1) Then 0 Else 
((([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month]))
/ (([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month])))


Udf_Avg Transfer/User TMLY

=If (IsNull(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA])  Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year])) = 1) Then 0 Else 
((([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA])  Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]))
/ (([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA])  Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year])))


Udf_Large Clients L12M

=If(IsNull(([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))


Udf_Large Clients L2L12M


=If(IsNull(([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))


Udf_Large Clients TM

=If(IsNull(([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate(
[Month Year TN];"Mmm-yy") = [Udf_This Month])) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month])


Udf_Large Clients TMLY

=If(IsNull(([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where  (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year])) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year])

Udf_Live Instant L12M

=If(IsNull([TransferNow Activity].[TN Transfer Count] Where ([TransferNow Activity].[Date] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))) = 1) Then 0 Else [TransferNow Activity].[TN Transfer Count] Where ([TransferNow Activity].[Date] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))


Udf_Live Instant L2L12M

=If(IsNull(([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))

Udf_Live Instant TM

=If(IsNull([TransferNow Activity].[TN Transfer Count] Where (FormatDate([TransferNow Activity].[Month Year];"Mmm-yy") = [Udf_This Month])) = 1) Then 0 Else [TransferNow Activity].[TN Transfer Count] Where (FormatDate([TransferNow Activity].[Month Year];"Mmm-yy") = [Udf_This Month])


Udf_Live Instant TMLY

=If(IsNull([TransferNow Activity].[TN Transfer Count] Where (FormatDate([TransferNow Activity].[Month Year];"Mmm-yy") = [Udf_This Month Last Year])) = 1) Then 0 Else [TransferNow Activity].[TN Transfer Count] Where (FormatDate([TransferNow Activity].[Month Year];"Mmm-yy") = [Udf_This Month Last Year])

Udf_Live Instant Total TM

= Sum([TransferNow Activity].[TN Transfer Count]) Where ((FormatDate([TransferNow Activity].[Month Year];"Mmm-yy") = [Udf_This Month]) And ([TransferNow Activity].[Transfer Speed] = "Instant")) In ([TransferNow Activity].[Transfer Speed])


Udf_NetFundFlow_L12M

=(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))
- (([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date]))))

Udf_NetFundFlow_L2L12M


=(([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))
- (([TransferNow Activity].[TN Transfer Amount] + [TransferNow Activity - BOFA].[TN Transfer Amount - BOFA]) Where (([Transfer Direction] = "Outbound") And ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date]))))


Udf_TN Avg Transfer per User

=If (IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])/([TransferNow Activity].[TN Transacted User Count] + [TransferNow Activity - BOFA].[TN Transacted User Count - BOFA])) = 1) Then 0 Else ([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])/([TransferNow Activity].[TN Transacted User Count] + [TransferNow Activity - BOFA].[TN Transacted User Count - BOFA])


=If(IsNull(([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA])  Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]))=1) Then 0
ElseIf(IsNull([Udf_Avg Transfer/User TMLY]) = 1) Then 0 Else (([Udf_Avg Transfer/User TM]-[Udf_Avg Transfer/User TMLY])/[Udf_Avg Transfer/User TMLY])

CASE
  WHEN (IsNull([Distinct TN].[TN Transacted User Count] + [Distinct TN - BOFA].[TN Transacted User Count - BOFA]) 
        WHERE (FormatDate([Month Year TN]; "Mmm-yy") = [Udf_This Month Last Year])) = 1 THEN 0
  WHEN (IsNull([Udf_Avg Transfer/User TMLY]) = 1) THEN 0
  ELSE (([Udf_Avg Transfer/User TM] - [Udf_Avg Transfer/User TMLY]) / [Udf_Avg Transfer/User TMLY])
END


	=([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) 
	Where (([Transfer Direction] = "Inbound") And (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month]))



total(([TransferNow Activity].[TN Transfer Count]) for ([Transfer Direction] = 'Inbound' AND [Month Year TN] = ?[Udf_This Month]?))
+
total(([TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) for ([Transfer Direction] = 'Inbound' AND [Month Year TN] = ?[Udf_This Month]?))

=([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Transfer Direction] = "Inbound") And ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])))



total(([TransferNow Activity].[TN Transfer Count] for ([Transfer Direction] = 'Inbound' AND [Date TN] between ?[Udf_Last 12 Months Start Date]? and ?[Udf_Last 12 Months End Date]?))) +
total(([TransferNow Activity - BOFA].[TN Transfer Count - BOFA] for ([Transfer Direction] = 'Inbound' AND [Date TN] between ?[Udf_Last 12 Months Start Date]? and ?[Udf_Last 12 Months End Date]?)))

total(([TransferNow Activity].[TN Transfer Count] for ([Transfer Direction] = 'Inbound' AND [Date TN] between ?[Udf_Last 12 Months Start Date]? and ?[Udf_Last 12 Months End Date]?)), [TransferNow Activity - BOFA].[TN Transfer Count - BOFA] for ([Transfer Direction] = 'Inbound' AND [Date TN] between ?[Udf_Last 12 Months Start Date]? and ?[Udf_Last 12 Months End Date]?))

	@Prompt(strClientID) = '-1' OR @Select(Sponsor\Sponsor
ID) = @Prompt(strClientID)


#prompt('strClientID')# = '-1' OR [Sponsor].[Sponsor ID] = #prompt('strClientID')#


=If IsNull([Processed Payment Count] Where ([Trans].[Media Category] = "Electronic")) Then 0 Else [Processed Payment Count] Where ([Trans].[Media Category] = "Electronic")


CASE 
  WHEN 
    ISNULL((Total([Processed Payment Count] for [Trans].[Media Category] = 'Electronic')))
  THEN 0 
  ELSE 
    (Total([Processed Payment Count] for [Trans].[Media Category] = 'Electronic'))
END


CASE 
  WHEN 
    ISNULL((Total([YourProcessedPaymentCountColumn] for [YourTransMediaCategoryColumn] = 'Electronic')))
  THEN 0 
  ELSE 
    (Total([YourProcessedPaymentCountColumn] for [YourTransMediaCategoryColumn] = 'Electronic'))
END


=If IsNull([Processed Payment Count] Where ([Trans].[Media Category] = "Paper")) Then 0 Else [Processed Payment Count] Where ([Trans].[Media Category] = "Paper")


CASE 
  WHEN COALESCE(Total([Processed Payment Count] for [Trans].[Media Category] = 'Paper'), 0) = 0 
  THEN 0 
  ELSE Total([Processed Payment Count] for [Trans].[Media Category] = 'Paper')
END


COALESCE(
  Total([Processed Payment Count] for [Trans].[Media Category] = 'Paper'), 
  0
)


=If IsNull([Processed Payment Count]) Then 0 Else [Processed Payment Count]


XQE-PLN-0229 This query is not supported, because it only contains dimension items and there is no single fact stream that covers all of the entities. The involved fact tables are: SPSR_ORG_RPT( VW_ORG_RPT), VW_DLY_PRCSD_PYMT_FACT, VW_PYMT, VW_SBSPNLESS_PYMT. Resolve this issue by adding one or more fact items to the query. RSV-SRV-0042 Trace back: 



COALESCE([Processed Payment Count], 0)


@Select(Calendar\Date) BETWEEN CASE
WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN
date_trunc('month', date_trunc('month', current_date)-1)
ELSE date_trunc('month', date_trunc('month',
@Prompt(dtRunDate))-1) END AND CASE WHEN
@Prompt(dtRunDate) = '9999-12-31 00:00:00'
THEN date_trunc('month', current_date)-1 ELSE
date_trunc('month', @Prompt(dtRunDate))-1 END




[Calendar\Date] BETWEEN 
CASE 
    WHEN #prompt('dtRunDate', 'date', '9999-12-31 00:00:00')# = _add_days(1970-01-01, 0) THEN 
        _add_days(_first_of_month(_add_months(current_date, -1)), 0)
    ELSE 
        _add_days(_first_of_month(_add_months(#prompt('dtRunDate', 'date', '9999-12-31 00:00:00')#, -1)), 0)
END 
AND 
CASE 
    WHEN #prompt('dtRunDate', 'date', '9999-12-31 00:00:00')# = _add_days(1970-01-01, 0) THEN 
        _add_days(_first_of_month(current_date), -1)
    ELSE 
        _add_days(_first_of_month(_add_months(#prompt('dtRunDate', 'date', '9999-12-31 00:00:00')#, -1)), -1)
END

=If IsError([Total Transaction]/[udf_Business Days]) Then 0 Else [Total Transaction]/[udf_Business Days]


if ([udf_Business Days] = 0 or [udf_Business Days] is null) then (0)
else ([Total Transaction] / [udf_Business Days])



RSV-VAL-0010 Failed to load the report specification. XQE-PLN-0229 This query is not supported, because it only contains dimension items and there is no single fact stream that covers all of the entities. The involved fact tables are: SPSR_ORG_RPT( VW_ORG_RPT), VW_CQ_MTHLY_PRCSD_PYMT_SLA_PA, VW_CQ_MTHLY_SPSR_INCDNT_PYMT, VW_DLY_CORP_CHK_ACTY_FACT, VW_DLY_PRCSD_CARD_FNDG_PYMT_FACT, VW_DLY_PRCSD_PYMT_FACT, VW_DLY_SPSR_CARD_FUND_FREQ_PYMT_FACT, VW_MTHLY_PYMT_REAL_TM_SMRY, VW_PYMT, VW_SBSPNLESS_PYMT, VW_TENANT_SRVC_UI_CONFIG. Resolve this issue by adding one or more fact items to the query. 


IF ([IncidentDaysBetween] = 0) THEN
    (  (?pStart_date?) )
ELSE 
    ( to_char(?pStart_date?,'M/d/yyyy') + '-' +to_char(?pEnd_date?,'M/d/yyyy') )

CASE
    WHEN ([IncidentDaysBetween] = 0) THEN 
        ( [pStart_date] )
    ELSE 
        ( to_char([pStart_date], 'M/D/YYYY') || '-' || to_char([pEnd_date], 'M/D/YYYY') )
END

[DataItem] in ([ValueList]) 
and [Index] <= (count([ValueList])/2)


[DataItem] in ([ValueList]) 
and [Index] > (count([ValueList])/2)


























SELECT DISTINCT
    A.SRC_ID,
    DATE(A.CHK_CRTE_DT) AS CHK_CRTE_DT,
    A.CHK_NBR,
    A.CHK_AMT,
    F.SBSPN_PYEE_FULL_NM,
    (CASE WHEN LENGTH(F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) = 0 THEN '' ELSE ('*' || F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) END) AS SBSPN_PYEE_ACCT_NBR_LAST4_TXT,
    (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END) AS LGCY_REM_CTR_NBR,
    A.CSMR_ID,
    RTRIM(H.FIRST_NM) || ' ' || RTRIM(H.LAST_NM) AS CONSUMER_NAM,
    I.SBSPN_STAT_NM,
    (CASE 
         WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE) - 2
         ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 2
     END) - DATE(A.CHK_CRTE_DT) AS CALENDAR_DAYS_OLD,
    SUM(J.CKFR_BSNS_DAY_IND) AS BUSINESS_DAYS_OLD,
    T1.SPSR_NM,
    'Fiserv' AS SOURCE,
    'CONFIDENTIAL' AS DATA_SENSITIVITY,
    'Custom SQL' AS QUERY_TYPE
FROM (
    SELECT
        B.LGCY_SPSR_ID,
        B.SPSR_ORG_INDV_ID,
        C.BSNS_NM AS SPSR_NM
    FROM PM_DEV_DWS.DW.VW_ORG_RPT A
    JOIN PM_DEV_DWS.DW.VW_SPSR B ON B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID
    JOIN PM_DEV_DWS.DW.VW_ORG C ON C.ORG_INDV_ID = B.SPSR_ORG_INDV_ID
    JOIN PM_DEV_DWS.DW.VW_RPT D ON D.RPT_ID = A.RPT_ID
    WHERE D.LGCY_RPT_ID = ?Enter_a_Report_ID?
      AND (?strClientID? = '-1' OR B.LGCY_SPSR_ID = ?strClientID?)
      AND B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID
) AS T1
JOIN PM_DEV_DWS.DW.VW_CORP_CHK_RCNCL AS A ON T1.LGCY_SPSR_ID = A.SRC_ID
JOIN PM_DEV_DWS.DW.VW_CR_TRN_REMIT AS B ON A.SRC_ID = B.SRC_ID
                                         AND A.CSMR_ID = B.CSMR_ID
                                         AND A.REMIT_CTR_PYMT_TRK_ID = B.REMIT_CTR_PYMT_TRK_ID
                                         AND A.PAY_HIST_ADD_TMS = B.PAY_HIST_ADD_TMS
JOIN PM_DEV_DWS.DW.VW_MEDIA_TYPE AS C ON B.MEDIA_TYPE_ID = C.MEDIA_TYPE_ID
JOIN PM_DEV_DWS.DW.VW_REM_CTR AS D ON A.REMIT_CTR_ORG_ID = D.RC_ORG_INDV_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN AS G ON A.CSMR_ID = G.LGCY_SBSR_ID
                                 AND A.SRC_ID = G.LGCY_SPSR_ID
                                 AND T1.LGCY_SPSR_ID = G.LGCY_SPSR_ID
                                 AND T1.SPSR_ORG_INDV_ID = G.ORG_INDV_ID
JOIN PM_DEV_DWS.DW.VW_PYMT AS E ON A.LGCY_SRVR_TRN_TMS = E.LGCY_TMS
                               AND G.SBSPN_ID = E.SBSPN_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN_PYEE AS F ON E.SBSPN_PYEE_ID = F.SBSPN_PYEE_ID
JOIN PM_DEV_DWS.DW.VW_PERS AS H ON G.SBSR_PERS_INDV_ID = H.PERS_INDV_ID
JOIN PM_DEV_DWS.DW.VW_SBSPN_STAT AS I ON G.SBSPN_STAT_ID = I.SBSPN_STAT_ID
JOIN PM_DEV_DWS.DW.VW_DATE_DIM AS J ON J.DATE_DIM_ID >= A.CHK_CRTE_DT
                                     AND J.DATE_DIM_ID < (
                                         CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)
                                              ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?))
                                         END
                                     )
WHERE 1=1
  AND (A.SRC_ID = '' OR A.SRC_ID = T1.LGCY_SPSR_ID)
  AND A.SRC_ID <> ''
  AND A.CHK_STAT_IND = 'N'
  AND A.CHK_CRTE_DT <= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)) - 20
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 20
      END
  )
  AND A.CHK_CRTE_DT >= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE)) - 90
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 90
      END
  )
  AND (A.CHK_RCNCL_DT IS NULL OR A.CHK_RCNCL_DT >= (
      CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN (CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE))
           ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?))
      END
  ))
  AND B.MEDIA_TYPE_ID = 3
GROUP BY
    A.SRC_ID,
    DATE(A.CHK_CRTE_DT),
    A.CHK_NBR,
    A.CHK_AMT,
    F.SBSPN_PYEE_FULL_NM,
    (CASE WHEN LENGTH(F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) = 0 THEN '' ELSE ('*' || F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT) END),
    (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END),
    A.CSMR_ID,
    RTRIM(H.FIRST_NM) || ' ' || RTRIM(H.LAST_NM),
    I.SBSPN_STAT_NM,
    (CASE WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN CURRENT_DATE - DAY_OF_WEEK_ISO(CURRENT_DATE) - 2
          ELSE TIMESTAMP_ISO(?dtRunDate?) - DAY_OF_WEEK_ISO(TIMESTAMP_ISO(?dtRunDate?)) - 2
     END) - DATE(A.CHK_CRTE_DT),
    T1.SPSR_NM


---------------------------------


 (Date ) BETWEEN
CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', date_trunc('month', current_date)-1) ELSE date_trunc('month', date_trunc('month', @Prompt(dtRunDate))-1)  END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date)-1 ELSE date_trunc('month', @Prompt(dtRunDate))-1 END  )


BLR_RPT.LGCY_RPT_ID  =  @Prompt('Enter a Report ID','N',,Mono,Free,Not_Persistent,,User:-1)


( @Prompt(strClientID) = '-1'
OR
( rtrim(ADMIN.VW_BILLER_ORG.LGCY_BLR_ID) ) = @Prompt(strClientID)  )

([Date] BETWEEN 
   (CASE 
      WHEN ?dtRunDate? = '9999-12-31 00:00:00' 
      THEN _add_months(_add_months(current_date,-1),1) 
      ELSE _add_months(?dtRunDate?,-1) 
    END)
   AND
   (CASE 
      WHEN ?dtRunDate? = '9999-12-31 00:00:00' 
      THEN _add_months(current_date,-1) 
      ELSE _add_months(?dtRunDate?,-1) 
    END)
)

[BLR_RPT].[LGCY_RPT_ID] = ?prmReportID?


(?prmClientID? = '-1' OR trim([ADMIN].[VW_BILLER_ORG].[LGCY_BLR_ID]) = ?prmClientID?)

if totext({?psdtRunDate}, "MMMM, yyyy") = "December, 9999" then
	totext(dateadd("M", -1, currentdate),"MMMM, yyyy")
else
	totext(dateadd("M", -1,{?psdtRunDate}), "MMMM, yyyy")



CASE
  WHEN to_char(?psdtRunDate?, 'Month, YYYY') = 'December, 9999'
  THEN to_char(add_months(current_date, -1), 'Month, YYYY')
  ELSE to_char(add_months(?psdtRunDate?, -1), 'Month, YYYY')
END



case 
    when [Number of Electronic Payments] = 0 then 'Only Bill Pay'
    when ([Number of P2P Send Transactions] + [Number of A2A Transfers]) = 0 then 'Only Bill Pay'
    when [Number of P2P Send Transactions] > 0 then
        case 
            when [Number of Bill Payments] = 0 and [Number of A2A Transfers] = 0 then 'Only P2P'
            when [Number of A2A Transfers] > 0 then 'P2P & A2A'
            else 'Bill Pay & P2P'
        end
    when [Number of A2A Transfers] = 0 then 'Bill Pay & P2P'
    else 'Bill Pay & P2P & A2A'
end


=FormatNumber([Total Transactions];"0000000000")+"|"+FormatNumber([Total Transaction $Amount];"00000000000.00") + "|" + FormatDate([Last Payment Date];"MMdd") + "|"+ Right([Subscriber ID];6)


FormatNumber([Total Transactions], "0000000000") || "|" || FormatNumber([Total Transaction $Amount], "00000000000.00") || "|" || FormatDate([Last Payment Date], "MMdd") || "|" || SubStr([Subscriber ID], Length([Subscriber ID]) - 5, 6)

-- Calculate padded Total Transactions
Substring('0000000000', 1, 10 - Length(Trim(ToString([Total Transactions])))) || ToString([Total Transactions])

-- Calculate padded Total Transaction $Amount
Substring('00000000000.00', 1, 14 - Length(Trim(ToString([Total Transaction $Amount])))) || ToString([Total Transaction $Amount])

-- Format Date
FormatDate([Last Payment Date], 'MMdd')

-- Extract Last 6 Characters
SubStr([Subscriber ID], Length([Subscriber ID]) - 5, 6)

-- Combine all parts
(
  Substring('0000000000', 1, 10 - Length(Trim(ToString([Total Transactions])))) || ToString([Total Transactions])
) || "|" ||
(
  Substring('00000000000.00', 1, 14 - Length(Trim(ToString([Total Transaction $Amount])))) || ToString([Total Transaction $Amount])
) || "|" ||
FormatDate([Last Payment Date], 'MMdd') || "|" ||
SubStr([Subscriber ID], Length([Subscriber ID]) - 5, 6)


Average Monthly Payment Makers

Average([Main].[Makers] ForEach([Main].[Month End Date]))


If [Main].[Makers] = 0
Then 0
Else ([Main].[Bill Pay Payments] / [Main].[Makers])) ForEach([Main].[Month End Date]



left({EDW.E-Bill\Failed Biller Event\Failed Transaction Bill Creation Date},8)
left({EDW.E-Bill\Failed Biller Event\Failed Transaction Bill Due Date},8)

if( isnull({EDW.E-Bill\Failed Biller Event\Failed Transaction Bill Due Amt})) then "0"
else
ToText(ToNumber(mid({EDW.E-Bill\Failed Biller Event\Failed Transaction Bill Due Amt},2,13)),"0")

substring([EDW.E-Bill.Failed Biller Event.Failed Transaction Bill Creation Date], 1, 8)


case
  when isNull([EDW.E-Bill.Failed Biller Event.Failed Transaction Bill Due Amt]) then '0'
  else
    numberToText(substring([EDW.E-Bill.Failed Biller Event.Failed Transaction Bill Due Amt], 2, 13), '0')
end


substring([EDW.E-Bill.Failed Biller Event.Failed Transaction Bill Due Date], 1, 8)


if totext({?psdtRunDate}, "MMMM dd, yyyy") = "December 31, 9999" then
      totext(dateadd("d", -1, currentdate), "MMMM dd, yyyy")
else
      totext(dateadd("d", -1, {?psdtRunDate}), "MMMM dd, yyyy")


case
  when formatDate([?psdtRunDate], 'MMMM dd, yyyy') = 'December 31, 9999' then
    formatDate(addDays(current_date, -1), 'MMMM dd, yyyy')
  else
    formatDate(addDays([?psdtRunDate], -1), 'MMMM dd, yyyy')
end

CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date) + interval '-6 month' ELSE date_trunc('month', @Prompt(dtRunDate)) + interval '-6 month'  END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date)-1 ELSE date_trunc('month', @Prompt(dtRunDate))-1 END  )


CASE 
    WHEN ?dtRunDate? = _add_days ( _add_months ( current_date, -6), 1 ) THEN 
        _add_months ( current_date, -6 )
    ELSE 
        _add_months ( _add_days ( ?dtRunDate?, 0), -6 )
END 
AND 
CASE 
    WHEN ?dtRunDate? = _add_days ( _add_months ( current_date, -6), 1 ) THEN 
        _add_days ( _add_months ( current_date, 0), -1 )
    ELSE 
        _add_days ( _add_months ( ?dtRunDate?, 0), -1 )
END


(DayNumberOfMonth([Date])*24)


_dayOfMonth([Date]) * 24


to_date(
(CASE
WHEN @Prompt('Beginning Month','A','Month Year':'MONTH',Mono,Free,Persistent,{'PriorMonth'})='PriorMonth' THEN TO_CHAR( DATE (( ( ADMIN.VW_RPT_36MONTH_PER_DIM.RPT_MO_BGN_DT ) )),'MM/YYYY')
ELSE @Prompt('Beginning Month','A','Month Year':'MONTH',Mono,Free,Persistent,{'PriorMonth'}) END)
, 'MM/YYYY') 


_case
  when [YourPromptParameter] = 'PriorMonth' then
    _to_char(
      add_months(current_date, -1), 
      'MM/YYYY'
    )
  else 
    _to_char(
      cast([YourPromptParameter] as date), 
      'MM/YYYY'
    )
_end


=If ( [Industry Selected Flag]='Yes' And Pos(ReportFilter([Industry]),',')=0,Rank([Number of Payments],[Payee],[Industry]),Rank([Number of Payments]))


if ([Industry Selected Flag] = 'Yes' and 
    count(string-to-array([ReportFilter]) ) = 1)
then 
    rank([Number of Payments], [Payee], [Industry]) 
else 
    rank([Number of Payments])



=If(Pos(ReportFilterSummary();"Industry In List {")>0;"Yes";"No")


IF (POSITION("Industry In List {" IN [ReportFilterSummary]) > 0) THEN 
    "Yes" 
ELSE 
    "No"



=If ( [Industry Selected Flag]="Yes" And Pos(ReportFilter([Industry]);";")=0;Rank([Number of Payments];[Payee];[Industry]);Rank([Number of Payments]))
