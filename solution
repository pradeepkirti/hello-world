total (
    case 
        when ([Transfer Direction] = 'Inbound' and cast(extract(month, [Month Year TN]) as varchar(2)) || '-' || cast(extract(year, [Month Year TN]) as varchar(4)) = [Udf_This Month]) 
        then [TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA] 
        else 0 
    end
)




ReportFilter-Home


=Replace(ReportFilter([Home Name - ID]);";";", "+Char(13)+Char(10))

ReportFilter-DormantPeriod

=UserResponse("Select Dormant Period:") + " days, as of " + FormatDate(RelativeDate(CurrentDate();-1); "Mmmm d, yyyy")

Has Transacted

=If IsNull([Last Send Date]) And IsNull([Last Received Money Date]) And IsNull([Last Request-to-Pay Sent Date])



CASE WHEN #Prompt('dtRunDate')# = '9999-12-31' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-2 ) 			
        ELSE TIMESTAMP(#Prompt('dtRunDate')#) -( TO_NUMBER(TO_CHAR(TIMESTAMP(#Prompt('dtRunDate')#),'D'),'9')-2 ) END)

'Month-To-Date (Cases Closed as of ' || 
    ( 
        if [#prompt('psdtRunDate','date')#] = '9999-12-31' 
        then to_char(add_days(current_date, -1), 'YYYY-MM-DD') 
        else to_char(add_days(#prompt('psdtRunDate','date')#, -1), 'YYYY-MM-DD') 
    ) 
    || ')'






	substr( rtrim(ltrim( DW.VW_INCDNT_EVNT.
PS_INCDNT_ID) ) , 1, 4 ) || '20' || substr( rtrim(ltrim(DW.
VW_INCDNT_EVNT.PS_INCDNT_ID ) ) , 5, 2 )= CASE
WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN
TO_CHAR(current_date + interval '-2 days','MMDDYYYY')
ELSE TO_CHAR(@Prompt(dtRunDate) + interval '-2
days','MMDDYYYY') end

substring(cast([OrderDate], varchar(10)), 9, 2) + '-' + substring(cast([OrderDate], varchar(10)), 6, 2) + '-' + substring(cast([OrderDate], varchar(10)), 1, 4)
format([OrderDate], 'MMM dd, yyyy')

Then "No"
Else "Yes"



CASE 
    WHEN ([Date] Between ([Udf_Last 12 Months Start Date] And [Udf_Last 12 Months End Date])) And ([Transfer Speed] = 'Instant')
    THEN count([TN Transfer Count] for [Transfer Speed])  + count([TN Transfer Count - BOFA] for [Transfer Speed])
    ELSE 0 
  END

ReportFilter-HasTransacted

=Replace(ReportFilter([Has Transacted]);";";", "+Char(13)+Char(10))

Has Sent Money (Non KTP)

=If IsNull([Last Send Money Date (Non-KTP)])
Then "No"
Else "Yes"


=[ReportFilter-HasSentMoneyNonKTP]


=Replace(ReportFilter([Has Sent Money (Non KTP)]);";";", "+Char(13)+Char(10))

Has Sent Money (KTP)

=If IsNull([Last KTP Send Money Date])
Then "No"
Else "Yes"


=[ReportFilter-HasSentMoneyKTP]

=Replace(ReportFilter([Has Sent Money (KTP)]);";";", "+Char(13)+Char(10))



=If IsNull([Last Send Money Date (Non-KTP)]) Then [Last KTP Send Money Date]
   ElseIf IsNull([Last KTP Send Money Date]) Then [Last Send Money Date (Non-KTP)]
   ElseIf [Last KTP Send Money Date] < [Last Send Money Date (Non-KTP)] Then [Last Send Money Date (Non-KTP)]
   Else [Last KTP Send Money Date]


CASE 
  WHEN [Last Send Money Date (Non-KTP)] IS NULL THEN [Last KTP Send Money Date]
  WHEN [Last KTP Send Money Date] IS NULL THEN [Last Send Money Date (Non-KTP)]
  WHEN [Last KTP Send Money Date] < [Last Send Money Date (Non-KTP)] THEN [Last Send Money Date (Non-KTP)]
  ELSE [Last KTP Send Money Date]
END


=LeftTrim(RightTrim(Replace(Replace(If Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than") > 0 
Then Substr(ReportFilterSummary("Dormant P2P Users"); Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than"); Pos(Substr(ReportFilterSummary("Dormant P2P Users"); Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than"); 200); Char(13)) - 1); "Days since last transaction is more than ";"");"Greater than";"")))
CASE 
  WHEN POSITION('Days since last transaction is more than' IN ReportFilterSummary('Dormant P2P Users')) > 0 THEN 
    TRIM(
      REPLACE(
        REPLACE(
          SUBSTRING(
            ReportFilterSummary('Dormant P2P Users'),
            POSITION('Days since last transaction is more than' IN ReportFilterSummary('Dormant P2P Users')),
            POSITION(CHAR(13) IN SUBSTRING(ReportFilterSummary('Dormant P2P Users'), POSITION('Days since last transaction is more than' IN ReportFilterSummary('Dormant P2P Users')))) - 1
          ),
          'Days since last transaction is more than ', 
          ''
        ),
        'Greater than', 
        ''
      )
    )
  ELSE 
    NULL
END

=UserResponse("Select Dormant Period:") + " days, as of " + FormatDate(RelativeDate(CurrentDate();-1); "Mmmm d, yyyy")

ParamDisplayValue('Select Dormant Period:') + ' days, as of ' + to_char(current_date - 1 day, 'MMMM D, YYYY')

=Replace(ReportFilter([Has Received Money]);";";", "+Char(13)+Char(10))
=Replace(ReportFilter([Has Requested Money]);";";", "+Char(13)+Char(10))
=Replace(ReportFilter([Has Sent Money (KTP)]);";";", "+Char(13)+Char(10))
=Replace(ReportFilter([Has Sent Money (Non KTP)]);";";", "+Char(13)+Char(10))
=Replace(ReportFilter([Has Transacted]);";";", "+Char(13)+Char(10))
=Replace(ReportFilter([Home Name - ID]);";";", "+Char(13)+Char(10))

replace(ReportFilter('Has Received Money'), ';', ', ' || chr(13) || chr(10))
replace(ReportFilter('Has Received Money'), ';', ', ' + chr(13) + chr(10))


=LeftTrim(RightTrim(Replace(Replace(If Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than") > 0 
Then Substr(ReportFilterSummary("Dormant P2P Users"); Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than"); Pos(Substr(ReportFilterSummary("Dormant P2P Users"); Pos(ReportFilterSummary("Dormant P2P Users"); "Days since last transaction is more than"); 200); Char(13)) - 1); "Days since last transaction is more than ";"");"Greater than";"")))



case
  when position('Days since last transaction is more than', ReportFilterSummary('Dormant P2P Users')) > 0 then
    ltrim(rtrim(
      replace(
        replace(
          substring(
            ReportFilterSummary('Dormant P2P Users'),
            position('Days since last transaction is more than', ReportFilterSummary('Dormant P2P Users')),
            locate(char(13), substring(ReportFilterSummary('Dormant P2P Users'), position('Days since last transaction is more than', ReportFilterSummary('Dormant P2P Users')))) - 1
          ),
          'Days since last transaction is more than ', ''
        ),
        'Greater than', ''
      )
    ))
end
=If ([Udf_Large Clients TMLY] = 0) Then 0 Else (([Udf_Large Clients TM] - [Udf_Large Clients TMLY])/[Udf_Large Clients TMLY])
CASE 
  WHEN [Udf_Large Clients TMLY] = 0 THEN 0
  ELSE ([Udf_Large Clients TM] - [Udf_Large Clients TMLY]) / [Udf_Large Clients TMLY]
END



=If (IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]) And ([Mobile TransferNow Activity] = "MOBILE"))) = 1) Then 0 

Else ((([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]) And ([Mobile TransferNow Activity] = "MOBILE")))

/(Sum(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]))) In ([Home ID]))



=If (IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]) And ([Mobile TransferNow Activity] = "MOBILE"))) = 1) Then 0 

Else ((([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]) And ([Mobile TransferNow Activity] = "MOBILE")))

/(Sum(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month Last Year]))) In ([Home ID]))



=If (IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])) And ([Mobile TransferNow Activity] = "MOBILE"))) = 1) Then 0 
Else ((([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])) And ([Mobile TransferNow Activity] = "MOBILE")))
/(Sum(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last 12 Months Start Date];[Udf_Last 12 Months End Date])))) In ([Home ID]))



=If (IsNull(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date])) And ([Mobile TransferNow Activity] = "MOBILE"))) = 1) Then 0 
Else ((([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date])) And ([Mobile TransferNow Activity] = "MOBILE")))
/(Sum(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ([Date TN] Between([Udf_Last to Last Year Start Date];[Udf_Last to Last Year End Date])))) In ([Home ID]))


count(
    if ([OrderAmount] >= ?Param_MinOrderAmount? and [OrderAmount] <= ?Param_MaxOrderAmount?)
    then (1)
    else (NULL)
)


count(
    if ([OrderAmount] >= 100 and [OrderAmount] <= 500)
    then (1)
    else (NULL)
)



CASE
    WHEN [Month Abbreviation] = 'JAN' THEN 'January'
    WHEN [Month Abbreviation] = 'FEB' THEN 'February'
    WHEN [Month Abbreviation] = 'MAR' THEN 'March'
    WHEN [Month Abbreviation] = 'APR' THEN 'April'
    WHEN [Month Abbreviation] = 'MAY' THEN 'May'
    WHEN [Month Abbreviation] = 'JUN' THEN 'June'
    WHEN [Month Abbreviation] = 'JUL' THEN 'July'
    WHEN [Month Abbreviation] = 'AUG' THEN 'August'
    WHEN [Month Abbreviation] = 'SEP' THEN 'September'
    WHEN [Month Abbreviation] = 'OCT' THEN 'October'
    WHEN [Month Abbreviation] = 'NOV' THEN 'November'
    WHEN [Month Abbreviation] = 'DEC' THEN 'December'
    ELSE 'Unknown'
END + ' ' + [Year]


CASE
    WHEN SUBSTR([Month Year], 1, 3) = 'Jan' THEN 'January'
    WHEN SUBSTR([Month Year], 1, 3) = 'Feb' THEN 'February'
    WHEN SUBSTR([Month Year], 1, 3) = 'Mar' THEN 'March'
    WHEN SUBSTR([Month Year], 1, 3) = 'Apr' THEN 'April'
    WHEN SUBSTR([Month Year], 1, 3) = 'May' THEN 'May'
    WHEN SUBSTR([Month Year], 1, 3) = 'Jun' THEN 'June'
    WHEN SUBSTR([Month Year], 1, 3) = 'Jul' THEN 'July'
    WHEN SUBSTR([Month Year], 1, 3) = 'Aug' THEN 'August'
    WHEN SUBSTR([Month Year], 1, 3) = 'Sep' THEN 'September'
    WHEN SUBSTR([Month Year], 1, 3) = 'Oct' THEN 'October'
    WHEN SUBSTR([Month Year], 1, 3) = 'Nov' THEN 'November'
    WHEN SUBSTR([Month Year], 1, 3) = 'Dec' THEN 'December'
    ELSE 'Unknown'
END + ' ' + SUBSTR([Month Year], 5, 4)


=RightTrim([First Name]) + " " + RightTrim([Middle Name]) + " " + RightTrim([Last Name])


RTRIM([First Name]) + ' ' + RTRIM([Middle Name]) + ' ' + RTRIM([Last Name])

=If Substr(ReportFilterSummary("User Send Activity by $Amount Range");542;237) = "<=$7.50, $7.51 to $15, $15.01 to $25, $25.01 to $50, $50.01 to $75, $75.01 to $100, $100.01 to $150, $150.01 to $200, $200.01 to $300, $300.01 to $500, $500.01 to $750, $750.01 to $1,000, $1,000.01 to $2,500, $2,500.01 to $5,000, >$5,000" 
Then "All values" 
Else Replace(ReportFilter([$Amount Range]);";";", "+Char(13)+Char(10))



IF (SUBSTRING(ReportFilterSummary('User Send Activity by $Amount Range'), 542, 237) = '<=$7.50, $7.51 to $15, $15.01 to $25, $25.01 to $50, $50.01 to $75, $75.01 to $100, $100.01 to $150, $150.01 to $200, $200.01 to $300, $300.01 to $500, $500.01 to $750, $750.01 to $1,000, $1,000.01 to $2,500, $2,500.01 to $5,000, >$5,000')
THEN 'All values'
ELSE REPLACE(ReportFilter([$Amount Range]), ';', ', ' + Char(10))



([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month])  And ([Transfer Speed] = "Instant"))


(Sum(([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])) Where ((FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month]) And ([Transfer Speed] = "Instant")) In ([Transfer Speed]))

total([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) 
for ([TransferNow Activity].[Month Year TN] = _add_months(_first_of_month(current_date), 0) 
and [TransferNow Activity].[Transfer Speed] = 'Instant')


total(
    [TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]
    for [Transfer Speed]
) 
within set (
    filter (
        [your dataset],
        [TransferNow Activity].[Month Year TN] = _add_months(_first_of_month(current_date), 0) 
        and [TransferNow Activity].[Transfer Speed] = 'Instant'
    )
)


total(
    if (
        [TransferNow Activity].[Month Year TN] = _add_months(_first_of_month(current_date), 0) 
        and [TransferNow Activity].[Transfer Speed] = 'Instant'
    ) then (
        [TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA]
    ) else (0)
) for [Transfer Speed]




CASE 
    WHEN ([Date] Between ([Udf_Last 12 Months Start Date] And [Udf_Last 12 Months End Date])) And ([Transfer Speed] = 'Instant')
    THEN count([TN Transfer Count] for [Transfer Speed])  + count([TN Transfer Count - BOFA] for [Transfer Speed])
    ELSE 0 
  END



total(
    if (
        [Date] between [Udf_Last 12 Months Start Date] and [Udf_Last 12 Months End Date]
        and [Transfer Speed] = 'Instant'
    ) then (
        [TN Transfer Count] + [TN Transfer Count - BOFA]
    ) else (0)
)

'For' + (to_char(CurrentDate,-1),'Mmmm dd, yyyy')

'For ' + cast(current_date, 'MMMM dd, yyyy')
="For  " + FormatDate(RelativeDate(CurrentDate();-1);"Mmmm dd, yyyy")

'For ' + cast(_add_days(current_date, -1), 'MMMM dd, yyyy')


([$Amount Range] in ('All')  or ([$Amount Range] in (?P_AmountRange?))


(
    (?P_AmountRange? = 'All')
    OR
    ([Your Data Item] in ?P_AmountRange?)
)
case 
    when 'All' in (?P_AmountRange?) then 1 
    when [Amount Range] in (?P_AmountRange?) then 1 
    else 0 
end = 1


ADMIN.VW_DATE_DIM.MO_BGN_DT BETWEEN
date_trunc('month', @Prompt(dtRunDate)) + interval '-23
month' AND date_trunc('month', @Prompt(dtRunDate))


[ADMIN.VW_DATE_DIM.MO_BGN_DT] between _add_months(_first_of_month(?dtRunDate?), -23) and _first_of_month(?dtRunDate?)


(((([TransferNow Activity].[TN Transfer Count]+[TransferNow Activity - BOFA].[TN Transfer Count - BOFA]) Where (FormatDate([Month Year TN];"Mmm-yy") = [Udf_This Month]))

if (formatDate([Month Year TN], 'MMM-yy') = [Udf_This Month])


then ([TransferNow Activity].[TN Transfer Count] + [TransferNow Activity - BOFA].[TN Transfer Count - BOFA])
else 0


CASE WHEN @Select(Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year) = -3 THEN 'Missing' WHEN @Select(Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year) = -2 THEN 'Business - N/A' WHEN @Select(Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year) = -1 THEN 'Invalid' ELSE @Select(Subscriber\Subscriber Age & Birth Year \Subscriber Birth Year)::VARCHAR(30) END
 
CASE WHEN [Database Layer].[VW_CQ_SSA_SBSR].[SBSR_BIRTH_YEAR_NBR] =-3  THEN 'Missing' WHEN [Database Layer].[VW_CQ_SSA_SBSR].[SBSR_BIRTH_YEAR_NBR] =-2 THEN 'Business - N/A' WHEN [Database Layer].[VW_CQ_SSA_SBSR].[SBSR_BIRTH_YEAR_NBR] =-1 THEN 'Invalid' ELSE [Database Layer].[VW_CQ_SSA_SBSR].[SBSR_BIRTH_YEAR_NBR] ::VARCHAR(30) END
CASE 
    WHEN [Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year] = -3 THEN 'Missing' 
    WHEN [Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year] = -2 THEN 'Business - N/A' 
    WHEN [Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year] = -1 THEN 'Invalid' 
    ELSE CAST([Subscriber\Subscriber Age & Birth Year\Subscriber Birth Year] AS VARCHAR(30)) 
END




format([OrderDate], 'MMM dd, yyyy')
substring(cast([OrderDate], varchar(10)), 9, 2) + '-' + substring(cast([OrderDate], varchar(10)), 6, 2) + '-' + substring(cast([OrderDate], varchar(10)), 1, 4)

substring(cast([OrderDate], varchar(10)), 6, 2) 
+ '/' + 
substring(cast([OrderDate], varchar(10)), 9, 2) 
+ '/' + 
substring(cast([OrderDate], varchar(10)), 1, 4)



(
    ?p_DateFilter? = 'ALL'
    OR
    (?p_DateFilter? = 'Yes' AND ([Last send date] IS NOT NULL OR [Last received date] IS NOT NULL OR [Last request date] IS NOT NULL))
    OR
    (?p_DateFilter? = 'No' AND ([Last send date] IS NULL AND [Last received date] IS NULL AND [Last request date] IS NULL))
)
CASE
  WHEN ([Last send date] IS NOT NULL OR [Last received date] IS NOT NULL OR [Last request date] IS NOT NULL) THEN 'Yes'
  ELSE 'No'
END


case 
when [Last Send Money Date (Non-KTP)] is null then to_char([Last KTP Send Money Date],'MM/DD/YYYY')

when [Last KTP Send Money Date] is null then to_char([Last Send Money Date (Non-KTP)],'MM/DD/YYYY')

when ([Last KTP Send Money Date] <[Last Send Money Date (Non-KTP)]) then to_char([Last Send Money Date (Non-KTP)],'MM/DD/YYYY')

else to_char([Last KTP Send Money Date],'MM/DD/YYYY')
end


CASE 
    WHEN [Last Send Money Date (Non-KTP)] IS NULL THEN 
        cast([Last KTP Send Money Date], 'MM/DD/YYYY')
    WHEN [Last KTP Send Money Date] IS NULL THEN 
        cast([Last Send Money Date (Non-KTP)], 'MM/DD/YYYY')
    WHEN ([Last KTP Send Money Date] < [Last Send Money Date (Non-KTP)]) THEN 
        cast([Last Send Money Date (Non-KTP)], 'MM/DD/YYYY')
    ELSE 
        cast([Last KTP Send Money Date], 'MM/DD/YYYY')
END


(CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-2 ) 			
        ELSE TIMESTAMP(@Prompt(dtRunDate)) -( TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-2 ) END)  - date(A.CHK_CRTE_DT) AS CALENDAR_DAYS_OLD



CASE WHEN @Prompt('dtRunDate', 'D', 'Enter Date:', 'Date Format:', ATTRIBUTE(dtRunDate)) = '9999-12-31 00:00:00'
     THEN CURRENT_DATE - (DAY_OF_WEEK(CURRENT_DATE) - 2)
     ELSE TIMESTAMP(@Prompt('dtRunDate', 'D', 'Enter Date:', 'Date Format:', ATTRIBUTE(dtRunDate))) - (DAY_OF_WEEK(TIMESTAMP(@Prompt('dtRunDate', 'D', 'Enter Date:', 'Date Format:', ATTRIBUTE(dtRunDate)))) - 2)
END - A.CHK_CRTE_DT AS CALENDAR_DAYS_OLD

---------------------------------------------------



 SELECT DISTINCT A.SRC_ID			
,      date(A.CHK_CRTE_DT)			
,      A.CHK_NBR			
,      A.CHK_AMT			
,      F.SBSPN_PYEE_FULL_NM 			
,      (CASE WHEN F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT = '' THEN '' ELSE ('*'||F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT)END)				
,      (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END) LGCY_REM_CTR_NBR			
,      A.CSMR_ID			
,      (RTRIM(H.FIRST_NM)||' '|| RTRIM(H.LAST_NM)) CONSUMER_NAM			
,      I.SBSPN_STAT_NM			
,      (CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-2 ) 			
        ELSE TIMESTAMP(@Prompt(dtRunDate)) -( TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-2 ) END)  - date(A.CHK_CRTE_DT) AS CALENDAR_DAYS_OLD			
,      SUM(J.CKFR_BSNS_DAY_IND) AS BUSINESS_DAYS_OLD			
,      T1.SPSR_NM 			
,      'Fiserv'			
,      'CONFIDENTIAL'			
,      'Custom SQL' 

FROM 			
		(SELECT B.LGCY_SPSR_ID	
                ,       B.SPSR_ORG_INDV_ID			
                ,       C.BSNS_NM AS SPSR_NM 			
  		FROM     PM_DEV_DWS.DW.VW_ORG_RPT A 	
  		JOIN     PM_DEV_DWS.DW.VW_SPSR B 	
 		ON B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID 	
 		JOIN     PM_DEV_DWS.DW.VW_ORG C 	
  		ON C.ORG_INDV_ID = B.SPSR_ORG_INDV_ID 	
  		JOIN     PM_DEV_DWS.DW.VW_RPT D 	
  		ON D.RPT_ID = A.RPT_ID 	
  		WHERE D.LGCY_RPT_ID = @Prompt('Enter a Report ID','N',,Mono,Free,Not_Persistent,,User:-1) 
      and (  @Prompt(strClientID) = '-1' OR ( B.LGCY_SPSR_ID ) =  @Prompt(strClientID)  )			
  		AND B.SPSR_ORG_INDV_ID = A.ORG_INDV_ID 	
  		) AS T1 	
			
  JOIN     PM_DEV_DWS.DW.VW_CORP_CHK_RCNCL AS A 			
  ON T1.LGCY_SPSR_ID = A.SRC_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_CR_TRN_REMIT AS B 			
  ON A.SRC_ID = B.SRC_ID 			
  AND A.CSMR_ID = B.CSMR_ID 			
  AND A.REMIT_CTR_PYMT_TRK_ID = B.REMIT_CTR_PYMT_TRK_ID 			
  AND A.PAY_HIST_ADD_TMS = B.PAY_HIST_ADD_TMS 			
  			
JOIN     PM_DEV_DWS.DW.VW_MEDIA_TYPE AS C 			
  ON B.MEDIA_TYPE_ID = C.MEDIA_TYPE_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_REM_CTR AS D 			
  ON A.REMIT_CTR_ORG_ID = D.RC_ORG_INDV_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_SBSPN AS G 			
  ON A.CSMR_ID = G.LGCY_SBSR_ID 			
  AND A.SRC_ID = G.LGCY_SPSR_ID 			
  AND T1.LGCY_SPSR_ID = G.LGCY_SPSR_ID 			
  AND T1.SPSR_ORG_INDV_ID = G.ORG_INDV_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_PYMT AS E 			
  ON A.LGCY_SRVR_TRN_TMS = E.LGCY_TMS 			
  AND G.SBSPN_ID = E.SBSPN_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_SBSPN_PYEE AS F 			
  ON E.SBSPN_PYEE_ID = F.SBSPN_PYEE_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_PERS AS H 			
  ON G.SBSR_PERS_INDV_ID = H.PERS_INDV_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_SBSPN_STAT AS I 			
  ON G.SBSPN_STAT_ID = I.SBSPN_STAT_ID 			
  			
JOIN     PM_DEV_DWS.DW.VW_DATE_DIM AS J 			
  ON J.DATE_DIM_ID >= A.CHK_CRTE_DT 			
  AND J.DATE_DIM_ID < CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-1 )
  ELSE TIMESTAMP(@Prompt(dtRunDate)) - (TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-1)  END 			
 			
  WHERE 1=1 			
			
  AND (A.SRC_ID = '' OR A.SRC_ID = T1.LGCY_SPSR_ID) 			
  AND A.SRC_ID <> '' 			
  AND A.CHK_STAT_IND = 'N' 			
			
  AND A.CHK_CRTE_DT <=  CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN (CURRENT_DATE -  TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-1)  -20 			
   ELSE TIMESTAMP(@Prompt(dtRunDate)) - (TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-1) - 20   END    			
  AND A.CHK_CRTE_DT >= CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN (CURRENT_DATE -  TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-1) -90  			
   ELSE TIMESTAMP(@Prompt(dtRunDate)) - (TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-1) - 90   END			
			
  AND (A.CHK_RCNCL_DT IS NULL OR A.CHK_RCNCL_DT >= CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN (CURRENT_DATE -  TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-1) 			
   ELSE TIMESTAMP(@Prompt(dtRunDate)) - (TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-1) END   ) 			
  AND B.MEDIA_TYPE_ID = 3 			
  			
GROUP BY A.SRC_ID, date(A.CHK_CRTE_DT), A.CHK_NBR, A.CHK_AMT, F.SBSPN_PYEE_FULL_NM, F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT, 			
  (CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END), A.CSMR_ID, 			
  (RTRIM(H.FIRST_NM)||' '|| RTRIM(H.LAST_NM)),			
  I.SBSPN_STAT_NM, 			
 (CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-2 ) 			
        ELSE TIMESTAMP(@Prompt(dtRunDate)) -( TO_NUMBER(TO_CHAR(TIMESTAMP(@Prompt(dtRunDate)),'D'),'9')-2 ) END)  - date(A.CHK_CRTE_DT), 		
  T1.SPSR_NM ,      			
  'Fiserv'			
,      'CONFIDENTIAL'			
,      'Custom SQL'			

	substr( rtrim(ltrim( DW.VW_INCDNT_EVNT.
PS_INCDNT_ID) ) , 1, 4 ) || '20' || substr( rtrim(ltrim(DW.
VW_INCDNT_EVNT.PS_INCDNT_ID ) ) , 5, 2 )= CASE
WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN
TO_CHAR(current_date + interval '-2 days','MMDDYYYY')
ELSE TO_CHAR(@Prompt(dtRunDate) + interval '-2
days','MMDDYYYY') end


substr( trim( leading ' ' from trim( trailing ' ' from DW.VW_INCDNT_EVNT.PS_INCDNT_ID ) ), 1, 4 ) || '20' || substr( trim( leading ' ' from trim( trailing ' ' from DW.VW_INCDNT_EVNT.PS_INCDNT_ID ) ), 5, 2 ) = 
case
  when ?dtRunDate? = '9999-12-31 00:00:00' then 
    to_char(current_date - 2 days, 'MMDDYYYY')
  else 
    to_char(?dtRunDate? - 2 days, 'MMDDYYYY')
end


"For " +
if totext({?psdtRunDate},"MMyyyy") = "129999" then
	totext(dateadd("d", -2, currentdate()),"MMMM dd, yyyy")
else
	totext(dateadd("d", -2, {?psdtRunDate}),"MMMM dd, yyyy")



mid(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}),1,4)+
mid(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}),5,2)+
mid(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}),7,2)



"For: " + trim({EDW_Client_Connect.Sponsor\Sponsor}) + " (" + trim({EDW_Client_Connect.Sponsor\Sponsor ID}) + ")"


"For " || 
case
    when to_char(?psdtRunDate?, 'MMyyyy') = '129999' then
        to_char(current_date - 2 day, 'MMMM dd, yyyy')
    else
        to_char(?psdtRunDate? - 2 day, 'MMMM dd, yyyy')
end


substr(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}), 1, 4) ||
substr(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}), 5, 2) ||
substr(trim({EDW_Client_Connect.Incident Event\Peoplesoft Incident ID}), 7, 2)


'For: ' || trim([EDW_Client_Connect].[Sponsor].[Sponsor]) || ' (' || trim([EDW_Client_Connect].[Sponsor].[Sponsor ID]) || ')'

PAM.VW_DLY_PRCSD_PYMT_FACT.
PRCS_DUE_DT BETWEEN CASE WHEN
@Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN
next_day(current_date,'MONDAY') + interval '-14 days'
ELSE next_day(@Prompt(dtRunDate),'MONDAY')
+ interval '-14 days' END AND CASE WHEN
@Prompt(dtRunDate) = '9999-12-31 00:00:
00' THEN (next_day(current_date,'MONDAY')
+ interval '-14 days') + interval '6 days' ELSE
(next_day(@Prompt(dtRunDate),'MONDAY') + interval '-14
days') + interval '6 days' END


PAM.VW_DLY_PRCSD_PYMT_FACT.PRCS_DUE_DT BETWEEN 
CASE 
    WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN 
        _next_of_week(current_date, 'Monday') - 14 DAYS
    ELSE 
        _next_of_week(?dtRunDate?, 'Monday') - 14 DAYS
END
AND 
CASE 
    WHEN ?dtRunDate? = '9999-12-31 00:00:00' THEN 
        (_next_of_week(current_date, 'Monday') - 14 DAYS) + 6 DAYS
    ELSE 
        (_next_of_week(?dtRunDate?, 'Monday') - 14 DAYS) + 6 DAYS
END


@Select(Call Center / Case - Claim\Claim Lifecycle
Summary\Claim End Timestamp) BETWEEN CASE
WHEN @Prompt(?psdtRunDate?) = '9999-12-31 00:00:00'
THEN DATE_TRUNC('Month',CURRENT_DATE) ELSE
DATE_TRUNC('Month',@Prompt({?psdtRunDate?)) END AND
CASE WHEN @Prompt(?psdtRunDate?) = '9999-12-31 00:00:00'
THEN current_date ELSE @Prompt(?psdtRunDate?) END


[Select].[Call Center / Case - Claim].[Claim Lifecycle Summary].[Claim End Timestamp] BETWEEN 
CASE 
    WHEN #prompt('psdtRunDate','date')# = '9999-12-31 00:00:00' 
    THEN _add_months(current_date, -1 * (_day(current_date) - 1))
    ELSE _add_months(#prompt('psdtRunDate','date')#, -1 * (_day(#prompt('psdtRunDate','date')#) - 1))
END 
AND 
CASE 
    WHEN #prompt('psdtRunDate','date')# = '9999-12-31 00:00:00' 
    THEN current_date 
    ELSE #prompt('psdtRunDate','date')# 
END

"Month-To-Date (Cases Closed as of " +
if totext({?psdtRunDate}, "yyyy-MM-dd") = "9999-12-31" then
	totext(dateadd("d", -1, currentdate), "yyyy-MM-dd") + ")"
else
	totext(dateadd("d", -1, {?psdtRunDate}), "yyyy-MM-dd") + ")"


'Month-To-Date (Cases Closed as of ' || 
    ( 
        if [#prompt('psdtRunDate','date')#] = '9999-12-31' 
        then to_char(add_days(current_date, -1), 'YYYY-MM-DD') 
        else to_char(add_days(#prompt('psdtRunDate','date')#, -1), 'YYYY-MM-DD') 
    ) 
    || ')'


case when ?psdtRunDate?='9999-12-31' then 

to_char(_add_months (cast(current_date,date),-1),'YYYY-MM-DD')   

else 

to_char(_add_months (cast(?psdtRunDate?,date),-1),'YYYY-MM-DD')

end

case
  when [psdtRunDate] = '9999-12-31' then 
    _add_months(current_date, -1)
  else 
    _add_months([psdtRunDate], -1)
end


case
  when [psdtRunDate] = '9999-12-31' then 
    format(_add_months(current_date, -1), 'YYYY-MM-DD')
  else 
    format(_add_months([psdtRunDate], -1), 'YYYY-MM-DD')
end

CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN DATE_TRUNC('Month',CURRENT_DATE)  ELSE  DATE_TRUNC('Month',@Prompt(dtRunDate)) END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN current_date ELSE  @Prompt(dtRunDate) END

CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN DATE_TRUNC('Month',CURRENT_DATE)  ELSE  DATE_TRUNC('Month',@Prompt(dtRunDate)) END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN current_date ELSE  @Prompt(dtRunDate) END  )



CASE WHEN #Prompt('dtRunDate')# = '9999-12-31' THEN CURRENT_DATE -  (TO_NUMBER(TO_CHAR(Current_date, 'D'),'9')-2 ) 			
        ELSE TIMESTAMP(#Prompt('dtRunDate')#) -( TO_NUMBER(TO_CHAR(TIMESTAMP(#Prompt('dtRunDate')#),'D'),'9')-2 ) END)



case
    when #prompt('dtRunDate')# = '9999-12-31' then
        _add_days(current_date, -((day_of_week(current_date) - 2)))
    else
        _add_days(#prompt('dtRunDate')#, -((day_of_week(#prompt('dtRunDate')#) - 2)))
end
(CASE WHEN F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT = '' THEN '' ELSE ('*'||F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT)END)

(CASE WHEN D.LGCY_REM_CTR_NBR > 0 THEN D.LGCY_REM_CTR_NBR ELSE 0 END)


case
    when [F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT] = '' then ''
    else '*' + [F.SBSPN_PYEE_ACCT_NBR_LAST4_TXT]
end



case
    when [D.LGCY_REM_CTR_NBR] > 0 then [D.LGCY_REM_CTR_NBR]
    else 0
end


Shared NumberVar i:=1;
Shared NumberVar j:=1;
Shared NumberVar k:=1;
Shared NumberVar Array growth;
Shared NumberVar Array mGrowth;
Shared NumberVar enroll:=0;
Shared NumberVar Act:=0;
reDim growth[6];
reDim mGrowth[99];
i;



shared numbervar i;
shared numbervar j;
shared numbervar k;
shared numbervar enroll;
shared numbervar Act;
shared numbervar array growth;
shared numbervar array mGrowth;

if i >= 3 then(
	growth[j]:=enroll;
	enroll:=0;
	Act:=0;
	j:=j+1;
	i:=1
	)
else(
	i:=i+1;
);

mGrowth[k] := Sum ({EDW_Client_Connect.Subscriber\Subscriber ID Enrollment Count}, {EDW_Client_Connect.Subscriber\Enrollment Date}, "monthly");
k:=k+1;
i;



shared numbervar j;
shared numbervar enroll;
shared numbervar array growth;

if j>1 then(
	if growth[j-1] = 0 then 0 else
		(({@Quarterly Enrollments}-growth[j-1])/growth[j-1])*100;	
)
else
	0;


% Growth Enrollments

shared numberVar k;
shared numberVar array mGrowth;

if k < 2 then
	0
else(
	if mGrowth[k-1] = 0 then
		0
	else 
		(({EDW_Client_Connect.Subscriber\Subscriber ID Enrollment Count}-mGrowth[k-1])/mGrowth[k-1])*100;

);


/* Example to calculate total growth by month */
MonthlyGrowth = total([EnrollmentCount] for_each ([EnrollmentDate] by month))

/* Conditional logic example */
CalculatedField = 
case
    when ([i] >= 3) then 
        /* Logic to handle growth and reset values */
        [enroll] = 0;
        [Act] = 0;
        [j] = [j] + 1;
        [i] = 1;
    else
        [i] = [i] + 1;
end


/* Define variables */
[i] = 1
[j] = 1
[k] = 1
[enroll] = 0
[Act] = 0

/* Define aggregated values */
[MonthlyEnrollment] = total([EnrollmentCount] for_each ([EnrollmentDate] by month))



shared numbervar i;
shared numbervar j;
shared numbervar k;
shared numbervar enroll;
shared numbervar Act;
shared numbervar array growth;
shared numbervar array mGrowth;

if i >= 3 then(
	growth[j]:=enroll;
	enroll:=0;
	Act:=0;
	j:=j+1;
	i:=1
	)
else(
	i:=i+1;
);

mGrowth[k] := Sum ({EDW_Client_Connect.Subscriber\Subscriber ID Enrollment Count}, {EDW_Client_Connect.Subscriber\Enrollment Date}, "monthly");
k:=k+1;
i;


/* Initialize or set values based on conditions */
[Calculated_i] =
case
    when ([i] >= 3) then
        /* Logic to handle the reset and increment operations */
        1  /* Reset i */
    else
        [i] + 1  /* Increment i */
end

[Calculated_j] =
case
    when ([i] >= 3) then
        [j] + 1  /* Increment j */
    else
        [j]  /* Keep j unchanged */
end

[Calculated_enroll] =
case
    when ([i] >= 3) then
        0  /* Reset enroll */
    else
        [enroll]  /* Keep enroll unchanged */
end

[Calculated_Act] =
case
    when ([i] >= 3) then
        0  /* Reset Act */
    else
        [Act]  /* Keep Act unchanged */
end


/* Monthly aggregation */
[MonthlyEnrollment] =
total([Subscriber ID Enrollment Count] for_each ([Enrollment Date] by month))



/* Track monthly growth */
[MonthlyGrowth] =
total([Subscriber ID Enrollment Count] for_each ([Enrollment Date] by month))

/* Update index-like values */
[Index_k] =
case
    when ([i] >= 3) then
        [k] + 1  /* Increment k */
    else
        [k]  /* Keep k unchanged */
end


if totext(?dtRunDate?), "MMddyyyy") = "12319999" then
	totext(dateadd("d", -(dayofweek(currentdate()-1)), currentdate()),"MMMM d, yyyy")
else
	totext(dateadd("d", -(dayofweek(?dtRunDate?)-1), (?dtRunDate?),"MMMM d, yyyy")	


if (formatDate([dtRunDate], "MMddyyyy") = "12319999") then
    _add_days(_current_date(), -dayOfWeek(_current_date()) + 1) 
else
    _add_days([dtRunDate], -dayOfWeek([dtRunDate]) + 1)

if length(trim[Dimension 2]) >= 4 then
	"*" + right(trim[Dimension 2],4)
else
	trim([Dimension 2])


if (length(trim([Dimension 2])) >= 4) then
    concat("*", right(trim([Dimension 2]), 4))
else
    trim([Dimension 2])


if (length(trim([Dimension 2])) >= 4) then
    concat("*", right(trim([Dimension 2]), 4))
else
    trim([Dimension 2])

="For "+ FormatDate(ToDate(UserResponse("Select Start Month:");"yyyyMM");"Mmmm yyyy") + " to " + FormatDate(ToDate(UserResponse("Select End Month:");"yyyyMM");"Mmmm yyyy") 


"For " || 
  _monthname(to_date(UserResponse('Select Start Month:'), 'yyyyMM')) || 
  " " || 
  _year(to_date(UserResponse('Select Start Month:'), 'yyyyMM')) || 
  " to " || 
  _monthname(to_date(UserResponse('Select End Month:'), 'yyyyMM')) || 
  " " || 
  _year(to_date(UserResponse('Select End Month:'), 'yyyyMM'))


"For " || 
  _monthname(to_date(UserResponse('Start Month'), 'yyyyMM')) || 
  " " || 
  _year(to_date(UserResponse('Start Month'), 'yyyyMM')) || 
  " to " || 
  _monthname(to_date(UserResponse('End Month'), 'yyyyMM')) || 
  " " || 
  _year(to_date(UserResponse('End Month'), 'yyyyMM'))


=Left(Trim([VAR Sponsor]);Pos(Trim([VAR Sponsor]);"-")-1)

substring(trim([VAR Sponsor]), 1, index(trim([VAR Sponsor]), "-") - 1)


="Page "+ Page()+ " of " + NumberOfPages()
"Page " || _page_number() || " of " || _total_pages()
Char(169) + " " + FormatDate(CurrentDate();"yyyy") + ", "+[Fiserv Logo]+", Inc."
"© " || year(current_date()) || ", " || [Fiserv Logo] || ", Inc."


_monthName = case 
                when _month = '01' then 'January'
                when _month = '02' then 'February'
                when _month = '03' then 'March'
                when _month = '04' then 'April'
                when _month = '05' then 'May'
                when _month = '06' then 'June'
                when _month = '07' then 'July'
                when _month = '08' then 'August'
                when _month = '09' then 'September'
                when _month = '10' then 'October'
                when _month = '11' then 'November'
                when _month = '12' then 'December'
                else 'Unknown Month'
              end


_year = substring([YourPromptParameter], 1, 4)
_month = substring([YourPromptParameter], 5, 2)


[DateField] >= ?startDate? and [DateField] <= ?endDate?

StartDate: _add_days(current_date, -365)
EndDate: current_date

[YourDateField] >= _add_months (_first_of_month (_current_date), -1)
AND [YourDateField] < _first_of_month (_current_date)

[OrderDate] >= _add_months (_first_of_month (_current_date), -1)
AND [OrderDate] < _first_of_month (_current_date)


   ( ( Table__1.DATE_DIM_ID ) BETWEEN
CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', date_trunc('month', current_date)-1) ELSE date_trunc('month', date_trunc('month', @Prompt(dtRunDate))-1)  END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date)-1 ELSE date_trunc('month', @Prompt(dtRunDate))-1 END  )
  )
(
  [Table__1.DATE_DIM_ID] >= 
  if (@Prompt('dtRunDate', 'date') = _add_days(_add_months(_first_of_month(_current_date), -1), -1), 
      _add_months(_first_of_month(_current_date), -1), 
      _add_months(_first_of_month(@Prompt('dtRunDate')), -1)
  )
  and 
  [Table__1.DATE_DIM_ID] <= 
  if (@Prompt('dtRunDate', 'date') = _add_days(_add_months(_first_of_month(_current_date), -1), -1), 
      _first_of_month(_current_date) - 1, 
      _first_of_month(@Prompt('dtRunDate')) - 1
  )
)


 ( ( Table__1.DATE_DIM_ID ) BETWEEN
CASE WHEN #Prompt('dtRunDate',date) = '9999-12-31' THEN date_trunc('month', date_trunc('month', current_date)-1) ELSE date_trunc('month', date_trunc('month', @Prompt(dtRunDate))-1)  END AND CASE WHEN @Prompt(dtRunDate) = '9999-12-31 00:00:00' THEN date_trunc('month', current_date)-1 ELSE date_trunc('month', @Prompt(dtRunDate))-1 END  )
  )
date_trunc('month', date_trunc('month', current_date)-1


_add_months(_first_of_month(_current_date), -1)

date_trunc('month', date_trunc('month', @Prompt(dtRunDate))-1)

date_trunc('month', current_date)-1

_add_days(_first_of_month(_current_date), -1)


#Prompt('dtRunDate')# = '9999-12-31 ' THEN current_date + interval '-1 days' else #Prompt('dtRunDate')# + interval '-1 days' end)
